<html>
<head>
<title>Bounding Boxer</title>
<style>
    #c {
        width: 1280;
        height: 720;
    }
</style>
</head>
<h3 id='disp'>Bounding Box Labeler Loading...</h3>
<canvas id='c' ></canvas>
<script>
function getMousePos(canvas, evt) {
    var rect = canvas.getBoundingClientRect();
    return {
        x: Math.floor((evt.clientX-rect.left)/(rect.right-rect.left)*canvas.width),
        y: Math.floor((evt.clientY-rect.top)/(rect.bottom-rect.top)*canvas.height)
    };
}
function render(canvas, mx, my) {
    var ctx = canvas.getContext("2d");
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, canvas.width, canvas.height);
    ctx.font = "30px Arial";
    ctx.fillStyle = "#fb8c30";
    ctx.lineWidth = 3;
    ctx.strokeStyle = "#fb8c30";
    ctx.strokeRect(bb_left, bb_top, (bb_right - bb_left), (bb_bot - bb_top));
    x0 = bb_left / canvas.width;
    x1 = bb_right / canvas.width;
    y0 = bb_top / canvas.height;
    y1 = bb_bot / canvas.height;
    msg = x0.toFixed(4) + ',' + x1.toFixed(4) + ',' + y0.toFixed(4) + ',' + y1.toFixed(4);
    //msg = bb_left + ',' + bb_right + ',' + bb_top + ',' + bb_bot;
    disp.innerText = msg;
}

function httpGetAsync(theUrl, callback) {
    var xmlHttp = new XMLHttpRequest();
    xmlHttp.onreadystatechange = function() { 
        if (xmlHttp.readyState == 4 && xmlHttp.status == 200)
            callback(xmlHttp.responseText);
    }
    xmlHttp.open("GET", theUrl, true); // true for asynchronous 
    xmlHttp.send(null);
}


var img = new Image();
img.src = '/frame.jpg'
var display = document.getElementById('disp');
var canvas = document.getElementById('c');
canvas.width = 1280;
canvas.height = 720;

var bb_left = 0;
var bb_right = 0;
var bb_top = 0;
var bb_bot = 0;
var down = false;

canvas.addEventListener('mousemove', function(e) {
    var m = getMousePos(canvas, e);
    if (down) {
        bb_right = m.x;
        bb_bot = m.y;
    }
    render(canvas, m.x, m.y);
}, false);
canvas.addEventListener('mousedown', function(e) {
    var m = getMousePos(canvas, e);
    bb_left = m.x;
    bb_top = m.y;
    down = true;
    console.log('mouse down ' + m.x + ' ' + m.y);
}, false);
canvas.addEventListener('mouseup', function(e) {
    var m = getMousePos(canvas, e);
    bb_right = m.x;
    bb_bot = m.y;
    down = false;
    console.log('mouse up ' + m.x + ' ' + m.y);
    msg = x0.toFixed(4) + ',' + x1.toFixed(4) + ',' + y0.toFixed(4) + ',' + y1.toFixed(4);
    url = '/box?x0=' + x0.toFixed(4) + '&x1=' + x1.toFixed(4) + '&y0=' + y0.toFixed(4) + '&y1=' + y1.toFixed(4);
    httpGetAsync(url, function() {
        console.log('Saved box ' + url);
    });
}, false);
window.addEventListener('keydown', function(e) {
    if (e.keyCode == 32) {
        location.reload();
    }
}, false);

    
</script>
</html>
